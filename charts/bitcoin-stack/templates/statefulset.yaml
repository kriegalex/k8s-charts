# First StatefulSet for bitcoind
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bitcoin-stack.fullname" . }}-bitcoind
  labels:
    {{- include "bitcoin-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: bitcoind
spec:
  replicas: 1
  serviceName: {{ include "bitcoin-stack.fullname" . }}-bitcoind
  selector:
    matchLabels:
      {{- include "bitcoin-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: bitcoind
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bitcoin-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: bitcoind
    spec:
      # Set termination grace period to 5 minutes to allow graceful shutdown
      terminationGracePeriodSeconds: 300
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bitcoin-stack.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}

      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      
      {{- if and .Values.persistence.enabled .Values.volumePermissions.enabled }}
      initContainers:
        - name: volume-permissions
          image: {{ .Values.volumePermissions.image | default "busybox" }}
          imagePullPolicy: {{ .Values.volumePermissions.pullPolicy | default "IfNotPresent" }}
          command: ["sh", "-c", "chmod -R 777 {{ .Values.bitcoind.dataDir }}"]
          volumeMounts:
            - name: data
              mountPath: {{ .Values.bitcoind.dataDir }}
          {{- if .Values.volumePermissions.securityContext.enabled }}
          securityContext:
            {{- toYaml .Values.volumePermissions.securityContext | nindent 12 }}
          {{- end }}
      {{- end }}
      containers:
        - name: bitcoind
          {{- if .Values.securityContext.enabled }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{ toYaml .Values.diagnosticMode.command | nindent 12 }}
          args: {{ toYaml .Values.diagnosticMode.args | nindent 12 }}
          {{- else }}
          command:
            - bitcoind
          args:
            - -conf={{ .Values.bitcoind.configFile }}
            - -datadir={{ .Values.bitcoind.dataDir }}
            - -rpccookiefile={{ .Values.bitcoind.cookieFile }}
            - -rpcport={{ .Values.bitcoind.rpc.rpcPort }}
            - -port={{ .Values.bitcoind.rpc.port }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "bitcoin-stack.fullname" . }}-config
          # Add lifecycle hook for graceful shutdown
          lifecycle:
            preStop:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "bitcoin-cli -rpccookiefile={{ .Values.bitcoind.cookieFile }} stop && sleep 30"
          ports:
            - name: tcp-p2p
              containerPort: {{ .Values.bitcoind.rpc.port }}
              protocol: TCP
            - name: http-rpc
              containerPort: {{ .Values.bitcoind.rpc.rpcPort }}
              protocol: TCP
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            httpGet:
              path: /v2/info
              port: http-rpc
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /v2/info
              port: http-rpc
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /v2/info
              port: http-rpc
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.bitcoind.dataDir }}
            - name: config
              mountPath: {{ .Values.bitcoind.configFile }}
              subPath: bitcoin.conf
      volumes:
        - name: config
          configMap:
            name: {{ include "bitcoin-stack.fullname" . }}-config
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- else if .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
    - metadata:
        name: data
        {{- if .Values.persistence.annotations }}
        annotations:
          {{- toYaml .Values.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- toYaml .Values.persistence.accessModes | nindent 10 }}
        {{- if .Values.persistence.storageClass }}
        {{- if eq "-" .Values.persistence.storageClass }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
    {{- end }}

---
# Second StatefulSet for electrs and log-tailer
{{- if .Values.electrs.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bitcoin-stack.fullname" . }}-electrs
  labels:
    {{- include "bitcoin-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: electrs
spec:
  replicas: 1
  serviceName: {{ include "bitcoin-stack.fullname" . }}-electrs
  selector:
    matchLabels:
      {{- include "bitcoin-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: electrs
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bitcoin-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: electrs
    spec:
      # Set termination grace period to allow graceful shutdown
      terminationGracePeriodSeconds: 300
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bitcoin-stack.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}

      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      
      containers:
        - name: electrs
          image: "{{ .Values.electrs.image.repository }}:{{ .Values.electrs.image.tag }}"
          imagePullPolicy: {{ .Values.electrs.image.pullPolicy }}
          command:
            - /bin/electrs
          args:
            - --timestamp
            - -v
            - --daemon-dir={{ .Values.bitcoind.dataDir }}
            - --db-dir={{ .Values.electrs.config.dbDir }}
            - --cors='*'
            {{- with .Values.electrs.config.extraArgs }}
            {{- range . }}
            - {{ . }}
            {{- end }}
            {{- end }}
          # Add lifecycle hook to ensure clean shutdown
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "kill -TERM 1"]
          ports:
            - name: electrum-rpc
              containerPort: {{ .Values.electrs.service.rpcPort }}
            - name: http
              containerPort: {{ .Values.electrs.service.httpPort }}
            - name: monitoring
              containerPort: {{ .Values.electrs.service.monitoringPort }}
          resources:
            {{- toYaml .Values.electrs.resources | nindent 12 }}
          volumeMounts:
            # Mount the bitcoin data directory to access blockchain data
            - name: bitcoind-data
              mountPath: {{ .Values.bitcoind.dataDir }}
              readOnly: true
            # Mount a separate directory for electrs database
            - name: electrs-db
              mountPath: {{ .Values.electrs.config.dbDir }}
        {{- if .Values.electrs.logTailer.enabled }}
        - name: log-tailer
          image: "{{ .Values.electrs.logTailer.image.repository }}:{{ .Values.electrs.logTailer.image.tag }}"
          command:
            - /bin/sh
            - -c
            - |
              until [ -f {{ .Values.electrs.config.dbDir }}/mainnet/newindex/txstore/LOG ]; do
                echo "Waiting for log file to be created..."
                sleep {{ .Values.electrs.logTailer.pollInterval }}
              done
              # The -n option tells tail to output only the specified number of lines initially
              # preventing large memory usage if the log file is already large
              exec tail -n {{ .Values.electrs.logTailer.initialLines }} -F {{ .Values.electrs.config.dbDir }}/mainnet/newindex/txstore/LOG
          resources:
            {{- toYaml .Values.electrs.logTailer.resources | nindent 12 }}
          # Add lifecycle hook to ensure clean shutdown
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "kill -TERM 1"]
          volumeMounts:
            - name: electrs-db
              mountPath: {{ .Values.electrs.config.dbDir }}
              readOnly: true
        {{- end }}
      volumes:
        # Reference the bitcoind data as a PVC
        - name: bitcoind-data
          persistentVolumeClaim:
            claimName: data-{{ include "bitcoin-stack.fullname" . }}-bitcoind-0
        {{- if not .Values.electrs.persistence.enabled }}
        - name: electrs-db
          emptyDir: {}
        {{- else if .Values.electrs.persistence.existingClaim }}
        - name: electrs-db
          persistentVolumeClaim:
            claimName: {{ .Values.electrs.persistence.existingClaim }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- if and .Values.electrs.persistence.enabled (not .Values.electrs.persistence.existingClaim) }}
    # Add PVC for electrs database
    - metadata:
        name: electrs-db
      spec:
        accessModes:
        {{- range .Values.electrs.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        {{- if .Values.electrs.persistence.storageClass }}
        {{- if eq "-" .Values.electrs.persistence.storageClass }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.electrs.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.electrs.persistence.size }}
    {{- end }}
{{- end }}
