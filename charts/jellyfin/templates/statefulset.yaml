apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "jellyfin.fullname" . }}
  labels:
    name: {{ include "jellyfin.fullname" . }}
    {{ include "jellyfin.labels" . | nindent 4 }}
  {{- with .Values.statefulSet.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ include "jellyfin.fullname" . }}
  selector:
    matchLabels:
      {{- include "jellyfin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jellyfin.labels" . | nindent 8 }}
      annotations:
        {{- toYaml .Values.statefulSet.podAnnotations | nindent 8 }}
    spec:
      serviceAccountName: {{ include "jellyfin.serviceAccountName" . }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      containers:
      - name: jellyfin
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: 8096
            name: http
        env:
          {{- if .Values.ingress.enabled }}
          - name: JELLYFIN_PublishedServerUrl
            value: {{ .Values.ingress.url }}
          {{- end }}
          {{- range .Values.extraEnv }}
          - name: {{ .name }}
            value: {{ .value | quote }}
          {{- end }}
        {{- with .Values.resources }}
        resources:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: config
            mountPath: {{ .Values.persistence.config.mountPath }}
            subPath: {{ .Values.persistence.config.subPath | quote }}
          - name: cache
            mountPath: {{ .Values.persistence.cache.mountPath }}
            subPath: {{ .Values.persistence.cache.subPath | quote }}
          {{- if .Values.extraVolumeMounts }}
          {{ toYaml .Values.extraVolumeMounts | nindent 10 }}
          {{- end }}
      volumes:
        {{- if .Values.persistence.config.existingClaim }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.config.existingClaim | quote }}
        {{- end }}
        {{- if .Values.persistence.cache.existingClaim }}
        - name: cache
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.cache.existingClaim | quote }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      {{- with .Values.extraHosts }}
      hostAliases:
        {{- range . }}
        - ip: "{{ .ip }}"
          hostnames:
            {{- range .hostnames }}
            - "{{ . }}"
            {{- end }}
        {{- end }}
      {{- end }}
  {{- if or (not .Values.persistence.config.existingClaim) (not .Values.persistence.cache.existingClaim) }}
  volumeClaimTemplates:
  {{- if not .Values.persistence.config.existingClaim }}
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.persistence.config.storageClassName }}
      storageClassName: {{ .Values.persistence.config.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.config.size }}
  {{- end }}
  {{- if not .Values.persistence.cache.existingClaim }}
  - metadata:
      name: cache
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.persistence.cache.storageClassName }}
      storageClassName: {{ .Values.persistence.cache.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.cache.size }}
  {{- end }}
  {{- end }}
