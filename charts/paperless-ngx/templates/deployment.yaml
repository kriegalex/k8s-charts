apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "paperless-ngx.fullname" . }}
  labels:
    name: {{ include "paperless-ngx.fullname" . }}
    {{ include "paperless-ngx.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "paperless-ngx.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "paperless-ngx.labels" . | nindent 8 }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      containers:
        - name: paperless-ngx
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: PAPERLESS_PORT
              value: {{ quote .Values.service.port }}
            {{- with .Values.ingress }}
            {{- if and .enabled .hosts }}
            - name: PAPERLESS_URL
              value: "http{{ if .tls }}s{{ end }}://{{ (first .hosts).host }}"
            {{- end }}
            {{- end }}
            {{- if .Values.postgresql.enabled }}
            {{- with .Values.postgresql }}
            - name: PAPERLESS_DBENGINE
              value: postgresql
            - name: PAPERLESS_DBHOST
              value: {{ $.Release.Name }}-postgresql
            - name: PAPERLESS_DBNAME
              value: {{ .auth.database }}
            - name: PAPERLESS_DBUSER
              value: {{ default "postgres" .auth.username }}
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-postgresql
                  key: {{ if not .auth.password }}postgres-{{ end }}password
            {{- end }}
            {{- else if .Values.mariadb.enabled }}
            {{- with .Values.mariadb }}
            - name: PAPERLESS_DBENGINE
              value: mariadb
            - name: PAPERLESS_DBHOST
              value: {{ $.Release.Name }}-mariadb
            - name: PAPERLESS_DBNAME
              value: {{ .auth.database }}
            - name: PAPERLESS_DBUSER
              value: {{ .auth.username }}
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-mariadb
                  key: mariadb-password
            {{- end }}
            {{- end }}

            {{- if .Values.redis.enabled }}
            {{- with .Values.redis }}
            - name: A_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-redis
                  key: redis-password
            - name: PAPERLESS_REDIS
              value: redis://{{ .auth.username }}:$(A_REDIS_PASSWORD)@{{ $.Release.Name }}-redis-master
            {{- end }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.service.port }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.data.mountPath }}
              subPath: {{ .Values.persistence.data.subPath | quote }}
            - name: media
              mountPath: {{ .Values.persistence.media.mountPath }}
              subPath: {{ .Values.persistence.media.subPath | quote }}
            {{- if .Values.persistence.shared.enabled }}
            - name: shared-export-consume
              mountPath: {{ .Values.persistence.export.mountPath }}
              subPath: {{ required "Required with shared enabled" .Values.persistence.export.subPath | quote }}
            - name: shared-export-consume
              mountPath: {{ .Values.persistence.consume.mountPath }}
              subPath: {{ required "Required with shared enabled" .Values.persistence.consume.subPath | quote }}
            {{- else }}
            - name: export
              mountPath: {{ .Values.persistence.export.mountPath }}
              subPath: {{ .Values.persistence.export.subPath | quote }}
            - name: consume
              mountPath: {{ .Values.persistence.consume.mountPath }}
              subPath: {{ .Values.persistence.consume.subPath | quote }}
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10 }}
            {{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.data.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.data.existingClaim }}{{ .Values.persistence.data.existingClaim }}{{- else }}{{ template "paperless-ngx.fullname" . }}-data{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: media
          {{- if .Values.persistence.media.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.media.existingClaim }}{{ .Values.persistence.media.existingClaim }}{{- else }}{{ template "paperless-ngx.fullname" . }}-media{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.persistence.shared.enabled }}
        - name: shared-export-consume
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.shared.existingClaim }}{{ .Values.persistence.shared.existingClaim }}{{- else }}{{ template "paperless-ngx.fullname" . }}-shared{{- end }}
        {{- else }}
        - name: export
          {{- if .Values.persistence.export.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.export.existingClaim }}{{ .Values.persistence.export.existingClaim }}{{- else }}{{ template "paperless-ngx.fullname" . }}-export{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: consume
          {{- if .Values.persistence.consume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.consume.existingClaim }}{{ .Values.persistence.consume.existingClaim }}{{- else }}{{ template "paperless-ngx.fullname" . }}-consume{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
