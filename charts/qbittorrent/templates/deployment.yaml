apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qbittorrent.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "qbittorrent.name" . }}
    helm.sh/chart: {{ include "qbittorrent.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "qbittorrent.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "qbittorrent.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.vpn.enabled }}
      # make sure you allowed them on your worker nodes ! check "allowed-unsafe-sysctls" kubelet documentation
      securityContext:
        sysctls:
          - name: net.ipv4.conf.all.src_valid_mark
            value: "1"
          - name: net.ipv6.conf.all.disable_ipv6
            value: "1"
      {{- end }}
      {{- if and .Values.vpn.enabled .Values.vpn.config }}
      initContainers:
        - name: copy-config
          image: busybox:1.28
          volumeMounts:
            - mountPath: /src-config
              name: wg-config
            - mountPath: /config
              name: qbittorrent-config
          command: [ "/bin/sh","-c" ]
          args:
            - echo "Copying over wg0.conf";
              set -ex;
              mkdir -p /config/wireguard/;
              cp /src-config/wg0.conf /config/wireguard/wg0.conf;
      {{- end }}
      containers:
        - name: qbittorrent
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env: # from helpers
            {{- include "qbittorrent.env" . | nindent 12 }}
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          volumeMounts:
            ##  only needed by hotio image in special cases, check hotio/qbittorrent
            # - name: dev-net-tun
            #   mountPath: /dev/net/tun
            - name: qbittorrent-config
              mountPath: /config
            - name: qbittorrent-data
              mountPath: /data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      volumes:
        {{- if .Values.vpn.enabled }}
        {{- if .Values.vpn.config  }}
        - name: wg-config
          configMap:
            name: {{ include "qbittorrent.fullname" . }}-wg
        {{- end }}
        # - name: dev-net-tun
        #   hostPath:
        #     path: /dev/net/tun
        {{- end }}
        - name: qbittorrent-config
          {{- if .Values.persistence.config.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.config.existingClaim }}{{ .Values.persistence.config.existingClaim }}{{- else }}{{ template "qbittorrent.fullname" . }}-config{{- end }}
          {{- else }}
          emptyDir: { }
          {{- end }}
        - name: qbittorrent-data
          {{- if .Values.persistence.data.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.data.existingClaim }}{{ .Values.persistence.data.existingClaim }}{{- else }}{{ template "qbittorrent.fullname" . }}-data{{- end }}
          {{- else }}
          emptyDir: { }
          {{- end }}
