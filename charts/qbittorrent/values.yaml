# -- Hotio qbittorrent image configuration
# @section Image Configuration
# @describeIn https://hotio.dev/containers/qbittorrent
image:
  # -- Docker image repository for qBittorrent
  repository: hotio/qbittorrent
  # -- Docker image tag
  # @default -- "" (uses appVersion from chart, typically 4.3.9 which is stable with no memory leaks)
  tag: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent

# -- Override the name of the chart
nameOverride: ""
# -- Override the full name of the chart
fullnameOverride: ""

# -- Number of replicas to be deployed
replicaCount: 1

# Service configuration for qBittorrent
service:
  # -- Service type
  # @default -- ClusterIP (LoadBalancer not assumed to be available to all users)
  type: ClusterIP
  # -- Port for the qBittorrent WebUI
  port: 8080

# Environment variables for the qBittorrent container
env:
  # -- Ports for the qBittorrent Web UI
  # @default -- "8080/tcp,8080/udp"
  WEBUI_PORTS: "8080/tcp,8080/udp"
  
  # -- The user ID (UID) for running the container
  # Ensures files are created with the correct user ownership
  PUID: 1000
  
  # -- The group ID (GID) for running the container
  # Ensures files are created with the correct group ownership
  PGID: 1000
  
  # -- The file permission mask
  # Controls default file and directory permissions
  # 002 means new files will have 664 (-rw-rw-r--) and directories 775 (drwxrwxr-x)
  UMASK: 002
  
  # -- Timezone setting
  # @default -- "Etc/UTC"
  TZ: "Etc/UTC"

  # -- VPN Configuration Settings
  # @section VPN Configuration

  # -- Private Internet Access (PIA) username
  # Overrides the VPN section secret if provided
  # @default -- ""
  VPN_PIA_USER: ""
  
  # -- Private Internet Access (PIA) password
  # Overrides the VPN section secret if provided
  # @default -- ""
  VPN_PIA_PASS: ""
  
  # -- The VPN configuration file to use
  # Typically set to 'wg0' for WireGuard or 'openvpn' for OpenVPN configurations
  VPN_CONF: wg0
  
  # -- The LAN network IP range that should bypass the VPN
  # Useful for allowing local network access while the VPN is active
  VPN_LAN_NETWORK: 192.168.1.0/24
  
  # -- Determines if LAN traffic should bypass the VPN
  # Set to 'false' to prevent local network traffic from leaking outside the VPN tunnel
  VPN_LAN_LEAK_ENABLED: false
  
  # -- Ports to be exposed to the LAN network
  # Leave empty to disable or specify ports if needed
  # @default -- ""
  VPN_EXPOSE_PORTS_ON_LAN: ""

  # -- Enables automatic port forwarding through the VPN
  # This is often necessary for torrenting to allow incoming connections
  VPN_AUTO_PORT_FORWARD: true
  
  # -- Specific ports to forward if VPN_AUTO_PORT_FORWARD is enabled
  # Leave empty to let the VPN provider choose
  # @default -- ""
  VPN_AUTO_PORT_FORWARD_TO_PORTS: ""
  
  # -- Keeps the local DNS settings when the VPN is connected
  # Set to 'false' to use the DNS provided by the VPN
  VPN_KEEP_LOCAL_DNS: false
  
  # -- Configures the type of firewall to use with the VPN
  # 'auto' lets the container decide based on the VPN type
  VPN_FIREWALL_TYPE: auto
  
  # -- Enables health checks to ensure the VPN connection is active
  # If the VPN connection drops, the container may restart or stop
  VPN_HEALTHCHECK_ENABLED: true

  # -- Preferred region for the PIA VPN
  # Leave empty to let PIA choose the optimal server automatically
  # @default -- ""
  VPN_PIA_PREFERRED_REGION: ""
  
  # -- PIA Dedicated IP token
  # Set to 'no' if not using a dedicated IP with PIA
  VPN_PIA_DIP_TOKEN: "no"
  
  # -- If true, persists the port forwarding setting across sessions
  # Useful if consistent port forwarding is required
  VPN_PIA_PORT_FORWARD_PERSIST: false

# VPN connection configuration
vpn:
  # -- Enable VPN support (same as VPN_ENABLED env var)
  enabled: false
  # -- VPN provider, currently supports PIA (same as VPN_PROVIDER env)
  provider: pia
  # -- Name of existing secret to use for PIA VPN
  # @default -- ""
  existingSecret: ""
  # -- Names of keys in existing secret to use for credentials
  existingKeys:
    # -- Username key in the secret (same as VPN_PIA_USER env)
    # @default -- ""
    usernameKey: ""
    # -- Password key in the secret (same as VPN_PIA_PASS env)
    # @default -- ""
    passwordKey: ""

  # -- WireGuard configuration to be copied to /config/wireguard/wg0.conf
  # @default -- ""
  # @example
  # config: |
  #   [Interface]
  #   PrivateKey = MY-PRIVATE-KEY
  #   Address = 10.0.0.1/24
  #   ListenPort = 51820
  #
  #   [Peer]
  #   PublicKey = PEER-PUBLIC-KEY
  #   AllowedIPs = 0.0.0.0/0
  config: ""

# Persistent storage configuration
persistence:
  # -- Configuration volume settings
  config:
    # -- Enable persistent storage for qBittorrent configuration
    enabled: false
    # -- Size of the configuration PVC
    size: "1Gi"
    # -- Access mode for the configuration PVC
    accessMode: "ReadWriteOnce"
    # -- Storage class for the configuration PVC
    # @default -- "" (uses the default storage class)
    # storageClass: ""
    # -- Use an existing PVC for configuration
    # @default -- ""
    # existingClaim: ""

  # -- Data volume settings for downloads
  data:
    # -- Enable persistent storage for downloads
    enabled: false
    # -- Size of the data PVC
    size: "500Gi"
    # -- Access mode for the data PVC
    accessMode: "ReadWriteOnce"
    # -- Storage class for the data PVC
    # @default -- "" (uses the default storage class)
    # storageClass: ""
    # -- Use an existing PVC for data
    # @default -- ""
    # existingClaim: ""

# Ingress configuration for exposing the qBittorrent UI
ingress:
  # -- Enable ingress
  enabled: false
  # -- The ingress class that should be used
  className: "nginx"
  # -- Additional annotations for the ingress resource
  # @default -- {}
  # @example
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: "true"
  annotations: {}
  # -- Host configuration for the ingress
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- TLS configuration for the ingress
  # @default -- []
  # @example
  # tls:
  #   - secretName: chart-example-tls
  #     hosts:
  #       - chart-example.local
  tls: []

# -- Resource requests and limits for the qBittorrent container
# @default -- {}
# @example
# resources:
#   limits:
#     cpu: 100m
#     memory: 128Mi
#   requests:
#     cpu: 100m
#     memory: 128Mi
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube.

# -- Common labels for all resources created by this chart
# @default -- {}
commonLabels: {}

# -- Pod affinity/anti-affinity settings
# @default -- {}
# @see https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity: {}
  # Example for node affinity:
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: kubernetes.io/hostname
  #         operator: In
  #         values:
  #         - worker-01
  
  # Example for pod affinity:
  # podAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #   - labelSelector:
  #       matchExpressions:
  #       - key: app
  #         operator: In
  #         values:
  #         - storage-app
  #     topologyKey: "kubernetes.io/hostname"
  
  # Example for pod anti-affinity:
  # podAntiAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #   - weight: 100
  #     podAffinityTerm:
  #       labelSelector:
  #         matchExpressions:
  #         - key: app
  #           operator: In
  #           values:
  #           - qbittorrent
  #       topologyKey: kubernetes.io/hostname
