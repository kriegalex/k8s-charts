# -- Default values for Palworld server.

# Image configuration for the Palworld server container
image:
  # -- Docker image repository
  repository: thijsvanloef/palworld-server-docker
  # -- Docker image tag
  # @default -- "" (defaults to Chart.AppVersion)
  tag: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent

# -- Override the name of the chart
nameOverride: ""
# -- Override the full name of the chart
fullnameOverride: ""

# Service account configuration
serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- The name of the service account to use
  # @default -- ""
  name: ""

# -- Security context for the pod
podSecurityContext:
  # -- Group ID for filesystem access
  fsGroup: 1000

# Security context for the container
securityContext:
  # -- User ID to run the container
  runAsUser: 1000
  # -- Group ID to run the container
  runAsGroup: 1000
  # -- Run container as non-root user
  runAsNonRoot: true
  # -- Security capabilities to drop
  capabilities:
    drop:
      - ALL

# Service configuration for the Palworld server
service:
  # -- Service type (LoadBalancer recommended for game server access)
  type: LoadBalancer
  # -- TCP port for game traffic
  port: 8211
  # -- UDP port for game traffic (must match TCP port)
  portUDP: 8211
  # -- Specify a nodePort value if using NodePort service type
  # @default -- ""
  nodePort: ""
  # -- Additional service annotations
  # @default -- {}
  annotations: {}

# -- Container resource requests and limits
# @default -- {}
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube.
  # limits:
  #   cpu: 4000m
  #   memory: 32Gi
  # requests:
  #   cpu: 2000m
  #   memory: 8Gi

# Persistent storage configuration for game data
persistence:
  # -- Enable persistent storage for game data
  enabled: true
  # -- Storage class for the game data PVC
  # @default -- ""
  storageClassName: ""
  # -- Access modes for the PVC
  accessModes:
    - ReadWriteOnce
  # -- Size of the PVC for game data and saves
  size: 20Gi
  # -- Additional PVC annotations
  # @default -- {}
  annotations: {}
  # -- Use an existing PVC
  # @default -- ""
  existingClaim: ""

# Palworld Server Configuration
server:
  # -- Maximum number of players allowed on the server
  players: 16
  # -- Server port (must match service port)
  port: 8211
  # -- Server name displayed in the server browser
  name: "Palworld Server"
  # -- Server description displayed in the server browser
  description: "Palworld Dedicated Server powered by Kubernetes"
  # -- Server password
  # Optional but recommended for security
  password: "changeme"
  # -- Admin password for RCON access
  # @default -- "changemeAdmin"
  adminPassword: "changemeAdmin"
  # -- Enable RCON for server administration
  rconEnabled: true
  # -- RCON port for admin commands
  rconPort: 25575
  # -- Server timezone
  timezone: "UTC"
  # -- Enable multithreading for better performance
  multithreading: true
  # -- Enable to show in community servers tab
  # WARNING: USE WITH SERVER_PASSWORD!
  community: false

  # Advanced settings:
  # For a complete list of available options, see:
  # https://github.com/thijsvanloef/palworld-server-docker/blob/main/README.md#environment-variables

# -- Additional environment variables
# @default -- []
# @example
# extraEnv:
#   - name: TZ
#     value: "UTC"
extraEnv: []

# Kubernetes startup probe configuration
startupProbe:
  # -- Enable startup probe
  enabled: true
  # -- Initial delay seconds
  initialDelaySeconds: 30
  # -- Period seconds
  periodSeconds: 10
  # -- Timeout seconds
  timeoutSeconds: 5
  # -- Failure threshold
  # @default -- 30 (allows up to 5 minutes for initial startup)
  failureThreshold: 30

# Kubernetes liveness probe configuration
livenessProbe:
  # -- Enable liveness probe
  enabled: true
  # -- Initial delay seconds
  initialDelaySeconds: 60
  # -- Period seconds
  periodSeconds: 20
  # -- Timeout seconds
  timeoutSeconds: 5
  # -- Failure threshold
  # @default -- 6 (allows up to 2 minutes for recovery)
  failureThreshold: 6

# Kubernetes readiness probe configuration
readinessProbe:
  # -- Enable readiness probe
  enabled: true
  # -- Initial delay seconds
  initialDelaySeconds: 60
  # -- Period seconds
  periodSeconds: 15
  # -- Timeout seconds
  timeoutSeconds: 5
  # -- Failure threshold
  # @default -- 20 (allows up to 5 minutes for readiness)
  failureThreshold: 20
