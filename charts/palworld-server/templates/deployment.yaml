apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "palworld-server.fullname" . }}
  labels:
    {{- include "palworld-server.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "palworld-server.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "palworld-server.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "palworld-server.fullname" . }}
            {{- if or .Values.server.password .Values.server.adminPassword }}
            - secretRef:
                name: {{ include "palworld-server.fullname" . }}
            {{- end }}
          {{- with .Values.extraEnv }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: game
              containerPort: {{ .Values.server.port }}
              protocol: UDP
            {{- if .Values.server.rconEnabled }}
            - name: rcon
              containerPort: {{ .Values.server.rconPort }}
              protocol: TCP
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /palworld
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # Startup probe - wait for server to initialize
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            exec:
              command:
                - pgrep
                - -f
                - PalServer-Linux
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          # Readiness probe - verify RCON is responsive
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - 'rcon-cli -a localhost:{{ .Values.server.rconPort }} -p "${ADMIN_PASSWORD}" "Info" 2>/dev/null | grep -q "Welcome" || exit 1'
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          # Liveness probe - check if server is running
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - 'rcon-cli -a localhost:{{ .Values.server.rconPort }} -p "${ADMIN_PASSWORD}" "Info" 2>/dev/null | grep -q "Welcome" || exit 1'
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
      volumes:
        - name: data
        {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- else if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "palworld-server.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
