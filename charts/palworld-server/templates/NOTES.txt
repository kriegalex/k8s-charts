Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

To learn more about the release, try:

  $ helm status {{ .Release.Name }}
  $ helm get all {{ .Release.Name }}

Server Information:
  - Game Port: {{ .Values.server.port }} UDP
  {{- if .Values.server.community }}
  - Query Port: 27015 UDP
  {{- end }}
  {{- if .Values.server.rconEnabled }}
  - RCON Port: {{ .Values.server.rconPort }} TCP
  {{- end }}
  - Server Name: {{ .Values.server.name }}

Access Information:
{{- if contains "NodePort" .Values.service.type }}
  Watch out! This service is exposed on a NodePort. Your server can be accessed from any node in your cluster.
  
  1. Get the node IPs:
     kubectl get nodes -o wide
  
  2. Get the NodePort (if not explicitly specified):
     kubectl get svc {{ include "palworld-server.fullname" . }} -n {{ .Release.Namespace }}
     
  3. Connect to your Palworld server using the node IP and NodePort.

{{- else if contains "LoadBalancer" .Values.service.type }}
  1. Get the LoadBalancer IP:
     kubectl get svc {{ include "palworld-server.fullname" . }} -n {{ .Release.Namespace }}
     
  2. Connect to your Palworld server using the external IP or hostname and port {{ .Values.service.port }}.

{{- else if contains "ClusterIP" .Values.service.type }}
  This service is exposed on a ClusterIP. You'll need to create an ingress or port-forward to access it outside the cluster.
  
  To port-forward to your local machine:
  kubectl port-forward svc/{{ include "palworld-server.fullname" . }} {{ .Values.service.port }}:{{ .Values.service.port }} -n {{ .Release.Namespace }} --address 0.0.0.0
  
  Then connect to your Palworld server using localhost:{{ .Values.service.port }}
{{- end }}

Notes:
- The server may take a few minutes to start after installation.
- Make sure that TCP and UDP ports are properly configured in your firewall/network.
- To view logs: kubectl logs deployment/{{ include "palworld-server.fullname" . }} -n {{ .Release.Namespace }} -f
